#include <iostream>
#include <bits/stdc++.h>
using namespace std;

//Structure of a single node
class node{
    public:
    int data ;
    node*right ;
    node*left ;
    node(int d){
        data = d ;
        right = NULL ;
        left = NULL ;
    }
};

// Function to make a tree
node* buildTree(){
    int d ; 
    cin>>d ;
    if (d == -1)
    {
        return NULL ;
    }
    node* root = new node(d) ;
    root->left = buildTree() ;
    root->right = buildTree() ;
    return root ;
    
}

// Function to print a binary tree by pre order
// root->left->right
void printPre(node* root){
    if (root == NULL)
    {
        return ;
    }
    cout<<root->data<<" " ;
    printPre(root->left) ;
    printPre(root->right) ;
}

// Function to print a binary tree by In order
// left->root->right
void printIn(node* root){
    if (root == NULL)
    {
        return ;
    }
    printIn(root->left) ;
    cout<<root->data<<" " ;
    printIn(root->right) ;
}

// Function to print a binary tree by post order
//left->right->root
void printPo(node* root){
    if (root == NULL)
    {
        return ;
    }
    printPo(root->left) ;
    printPo(root->right) ;
    cout<<root->data<<" " ;
}
int main(){
   node* root = buildTree() ;
   printPre(root) ;
   cout<<endl ;
   printIn(root) ;
   cout<<endl ;
   printPo(root) ;
   cout<<endl ;
    return 0;
}
