Problem Name: Sanket And Strings
Problem Difficulty: None
Problem Constraints: 2 ≤ N ≤ 10^6
Problem Description:
Sanket has a string consisting of only 'a' and 'b' as the characters. Sanket describes perfectness of a string as the maximum length substring of equal characters. Sanket is given a number **k** which denotes the maximum number of characters he can change. Find the maximum perfectness he can generate by changing no more than **k** characters.
Input Format: The first line contains an integer denoting the value of K.
The next line contains a string having only ‘a’ and ‘b’ as the characters.
Sample Input: 2
abba
Output Format: A single integer denoting the maximum perfectness achievable.
Sample Output: 4





****************************************************************************************************************************************************************************** 


#include <iostream>
 #include <cstring>
 #include <bits/stdc++.h>

  using namespace std;
  int main ()
  { char str[100] ;
    int arr[2] = {0} , k , perfectness=0 ;
    cout<<"Enter the string"<<endl ;
    cin.getline(str,100) ;
    cout<<"Enter the maximum swaps available"<<endl;
    cin>>k ;

    for (int i = 0; i < strlen(str); i++)
    {   
        if (str[i] == 'a')
        {
            arr[0]++ ;
        }
        else{
            arr[1]++ ;
        }
    }
    perfectness = max(arr[0] , arr[1]) ;
    for (int i = 0; i < strlen(str); i++)
    {  if(k != 0){
        if(arr[0]>arr[1]){
         if (str[i]=='b')
         {
            str[i] == 'a' ;
            perfectness++ ;
            k-- ;
        }
     }
         else{
            str[i] == 'b' ;
            perfectness++ ;
            k-- ;
         }
    }
   }
    
    cout<<"perfectness = "<<" "<< perfectness ;
      return 0;
  }
