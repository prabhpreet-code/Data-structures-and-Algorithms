
Problem Name: Rain Water Harvesting
Problem Difficulty: None
Problem Constraints: 1 <= N <= 10^6
Problem Description:
Apoorvaa has created an elevated roof. She wants to know how much water can she save during rain.

Given n non negative integers representing the elevation map where width of every bar is 1, Find the maximum water that she can save. 

Explanation for the Sample input Testcase:  
<img src="https://minio.cb.lk/img/ScHHWbX.jpg" alt="Elevation Map" height="150" width="300">  
 
So the total units of water she can save is 5 units

Input Format: First line contains an integer n. Second line contains n space separated integers representing the elevation map.
Sample Input: 10
0 2 1 3 0 1 2 1 2 1
Output Format: Print a single integer containing the maximum unit of waters she can save.
Sample Output: 5



********************************************************************************************************************************************************************

#include <iostream>
#include <algorithm>
#include <bits/stdc++.h>
using namespace std;
   int main(){
   
    int arr[100] , maxArr[100] , minArr[100] , n;
    cout<<"Enter the number of buildings"<<endl ;
    cin>>n ;
    cout<<"Enter the sizes of building "<< endl ; 
    
    for (int i = 0; i < n; i++)
    {
        cin>>arr[i] ;
    }

    int max=arr[0] ;
    maxArr[0] = arr[0] ;
    for (int i = 1; i < n; i++)
    {
        if (arr[i]>max)
        {
            max=arr[i] ;
        }
        maxArr[i] = max ;
    }
    int minNo=arr[n-1] ;
    minArr[n-1] = arr[n-1] ;
    for (int i = n-1; i >=0; i--)
    {
        if (arr[i] > minNo)
        {
            minNo = arr[i] ;
        }
        minArr[i] = minNo ;
    }
    int result=0 ;
    
    for (int i = 0; i < n; i++)
    {
        result += min(minArr[i],maxArr[i]) -arr[i] ;
    }
    
    cout<<"Total units of water :"<< " "<< result ;
      return 0 ;
  }
