#include<iostream>
#include<bits/stdc++.h>
#include<queue>

using namespace std;

template<typename T> 
class Stack{
    queue<int> q1 ;
    queue<int> q2 ;
    public:
    
    void push(int d){
        q1.push(d) ;
    }

    int front(){
        if (!q1.empty())
        {  while (q1.size() > 1)
        {
            int element = q1.front() ;
            q2.push(element) ;
            q1.pop() ;
        }
        int element = q1.front() ;
            q2.push(element) ;
            q1.pop() ;

            swap(q1 , q2) ;
            return element ;
            
        }
        return -1 ;
    }

    void pop(){
        if (!q1.empty())
        {  while (q1.size() > 1)
        {
            int element = q1.front() ;
            q2.push(element) ;
            q1.pop() ;
        }
            q1.pop() ;

            swap(q1 , q2) ;
           
        }
        
    }
    int sizeofQueue(){
        return q1.size()+q2.size() ;
    }
    bool emptyReturn(){
        return sizeofQueue() == 0 ;
    }
};

int main(){ 
    Stack<int> q ;    
        q.push(1) ;
        q.push(2) ;
        q.push(3) ;
        q.push(4) ;
        while(!q.emptyReturn())
        {  
            cout<<q.front()<<endl ;
            q.pop() ; 
        }
        
         
    return 0;
}
