
Problem Name: Unique Numbers - II
Problem Difficulty: None
Problem Constraints: n < 10^5
Problem Description:
We are given an array containg n numbers. All the numbers are present twice except for two numbers which are present only once. Find the unique numbers in linear time without using any extra space. ( Hint - Use Bitwise )

Input Format: First line contains the number n. Second line contains n space separated number.
Sample Input: 4
3 1 2 1
Output Format: Output a single line containing the unique numbers separated by space
Sample Output: 2 3


************************************************************************************************************************************************************

#include <iostream>
#include <bits/stdc++.h>
#include<algorithm>
#include<stdio.h>
using namespace std ;


int main()
{ 
   int n,arr[1000] , res=0;
   cout<<"Enter the range" <<endl ;
   cin>>n ;
   cout<<"Enter the numbers:"<<endl ;
   for (int i = 0; i < n; i++)
   {
       cin>>arr[i] ;
       res = res^arr[i] ;
   }
    
    int temp = res ;
    int pos=0 ;

   while ((temp&1)!= 1)
   {   
       pos++ ;
       temp=temp>>1 ;
    }

    int mask = 1<<pos ;
//    int x=0;
//   int y=0 ;
//    for (int i = 0; i < n; i++)
//   {
//        if ((arr[i]&mask)>0)
//        {
//            x=x^arr[i] ;
//        }
//        
//    }
//    y=res^x ;
    
    for (int i = 0; i < n; i++)
    {   
        int b = arr[i]>>pos ;
        int a = b&1 ;
        if (a != 0)
        {
            x=x^arr[i] ;
        }
        
    }
    y=res^x ;
    cout<<"result"<<endl ;
    cout<<min(x,y)<<" " <<max(x,y) ;
    
    return 0;
}
