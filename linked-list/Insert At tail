#include <iostream>
#include <bits/stdc++.h>
using namespace std;

class node{
    public:
    int data ;
    node*next ;
    node(int d){
        next = NULL ;
        data = d ;
    }
};

void insertAtHead(node* &head , int d){
    if (head == NULL)
    {
        head = new node(d) ;    
        return ;  
    }
    node*n = new node(d) ;
    n->next=head ;
    head = n ;
}

void insertAtTail(node* &head , int d){
    if (head == NULL)
    {
        head = new node(d) ;
        return ;
    }
    node* tail = head ;
    while (tail->next != NULL)
    {
        tail = tail->next ;
    }
    tail->next = new node(d) ;
}

int length(node* head ){
    int count = 0 ;
    while (head != NULL)
    {
        count++ ;
        head = head->next ;
    }
    return count ;
    
}

void insertAtMiddle(node* &head , int d , int p){
    if (head == NULL || p == 0)
    {
        insertAtHead(head , d) ;
        return ;
    }
    else if (p >(length(head)))
    {
        insertAtTail(head , d ) ;
    }
    else{
        int jump = 1 ;
        node*temp = head ;
        while (jump <= p-1)
        {   
            temp = temp->next ;
            jump++ ;
        }
        node*n = new node(d) ;
        n->next = temp->next ;
        temp->next = n ;  

    }
    
    
}

void print(node* head){
    while (head != NULL)
    {
        cout<<head->data<<" -> " ;
        head = head->next ;
    }
    cout<<endl ;
}

int main()
{   node*head = NULL ;
    insertAtHead(head , 5) ;
    insertAtHead(head , 3) ;
    insertAtHead(head , 2) ;
    insertAtHead(head , 1) ;
    insertAtHead(head , 0) ;
    print(head) ; 
    insertAtTail(head ,6) ;
    insertAtMiddle(head , 4 , 4) ;
    print(head) ;
    return 0;
}
